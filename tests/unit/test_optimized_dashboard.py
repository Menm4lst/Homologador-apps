#!/usr/bin/env python
"""
Script de prueba para el dashboard optimizado
Verifica que todas las m√©tricas se calculen correctamente
"""

import sys
import os
sys.path.insert(0, os.getcwd())

from PyQt6.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QWidget, QPushButton, QLabel
from PyQt6.QtCore import Qt

def test_optimized_dashboard():
    """Prueba el dashboard optimizado."""
    
    print("üß™ PRUEBA DEL DASHBOARD OPTIMIZADO")
    print("=" * 50)
    
    app = QApplication(sys.argv)
    
    # Crear ventana de prueba
    class TestWindow(QMainWindow):
        def __init__(self):
            super().__init__()
            self.setWindowTitle("üß™ Prueba Dashboard Optimizado")
            self.setGeometry(100, 100, 1200, 800)
            
            central_widget = QWidget()
            self.setCentralWidget(central_widget)
            layout = QVBoxLayout(central_widget)
            
            # T√≠tulo
            title = QLabel("Prueba del Dashboard de M√©tricas Optimizado")
            title.setStyleSheet("font-size: 18px; font-weight: bold; margin: 20px;")
            title.setAlignment(Qt.AlignmentFlag.AlignCenter)
            layout.addWidget(title)
            
            # Bot√≥n para abrir dashboard
            btn_open_dashboard = QPushButton("üìä Abrir Dashboard Optimizado")
            btn_open_dashboard.setStyleSheet("""
                QPushButton {
                    background-color: #0078d4;
                    color: white;
                    border: none;
                    border-radius: 8px;
                    padding: 15px 30px;
                    font-size: 16px;
                    font-weight: bold;
                    margin: 20px;
                }
                QPushButton:hover {
                    background-color: #106ebe;
                }
            """)
            btn_open_dashboard.clicked.connect(self.open_dashboard)
            layout.addWidget(btn_open_dashboard)
            
            # Informaci√≥n
            info = QLabel("""
            ‚úÖ Dashboard completamente optimizado con:
            
            üîπ Consultas SQL directas para mejor rendimiento
            üîπ Campos de base de datos correctos (repository_location, homologation_date, etc.)
            üîπ M√©tricas precisas basadas en datos reales
            üîπ Estad√≠sticas de finalizaci√≥n mejoradas
            üîπ Top repositorios con nombres limpios
            üîπ Manejo robusto de errores
            üîπ Cache interno para evitar rec√°lculos
            üîπ UI moderna con temas
            
            Haz clic en el bot√≥n para abrir el dashboard y ver las mejoras!
            """)
            info.setStyleSheet("margin: 20px; padding: 20px; background-color: #f0f8ff; border-radius: 8px; line-height: 1.6;")
            layout.addWidget(info)
            
            self.dashboard_window = None
        
        def open_dashboard(self):
            """Abre el dashboard optimizado."""
            try:
                from homologador.ui.metrics_panel import MetricsPanel
                
                if self.dashboard_window:
                    self.dashboard_window.close()
                
                # Crear ventana del dashboard
                self.dashboard_window = QWidget()
                self.dashboard_window.setWindowTitle("üìä Dashboard de M√©tricas Optimizado")
                self.dashboard_window.setGeometry(150, 150, 1200, 800)
                
                layout = QVBoxLayout(self.dashboard_window)
                layout.setContentsMargins(0, 0, 0, 0)
                
                # Crear panel de m√©tricas optimizado
                metrics_panel = MetricsPanel()
                layout.addWidget(metrics_panel)
                
                self.dashboard_window.show()
                
                print("‚úÖ Dashboard optimizado abierto exitosamente!")
                
            except Exception as e:
                print(f"‚ùå Error abriendo dashboard: {e}")
                import traceback
                traceback.print_exc()
    
    # Mostrar ventana de prueba
    window = TestWindow()
    window.show()
    
    print("üöÄ Aplicaci√≥n de prueba iniciada")
    print("üìù Instrucciones:")
    print("   1. Haz clic en 'Abrir Dashboard Optimizado'")
    print("   2. Verifica que las m√©tricas se calculen correctamente")
    print("   3. Prueba diferentes per√≠odos de tiempo")
    print("   4. Verifica que no hay errores de 'status' o 'repository_url'")
    print()
    
    return app.exec()

if __name__ == "__main__":
    sys.exit(test_optimized_dashboard())